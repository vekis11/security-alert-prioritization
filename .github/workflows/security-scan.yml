name: Advanced Security Scanning

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    # Daily security scans at 3 AM UTC
    - cron: '0 3 * * *'

env:
  NODE_VERSION: '18'
  SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

jobs:
  # Snyk Security Scanning
  snyk-scan:
    name: Snyk Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci
          cd client && npm ci

      - name: Run Snyk test for backend
        uses: snyk/actions/node@master
        continue-on-error: true
        with:
          args: --severity-threshold=medium --file=package.json --json-file-output=snyk-backend.json

      - name: Run Snyk test for frontend
        uses: snyk/actions/node@master
        continue-on-error: true
        with:
          args: --severity-threshold=medium --file=client/package.json --json-file-output=snyk-frontend.json

      - name: Run Snyk monitor
        uses: snyk/actions/node@master
        continue-on-error: true
        with:
          args: --severity-threshold=high

      - name: Upload Snyk results
        uses: actions/upload-artifact@v3
        with:
          name: snyk-results
          path: |
            snyk-backend.json
            snyk-frontend.json
          retention-days: 30

  # OWASP Dependency Check
  owasp-scan:
    name: OWASP Dependency Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run OWASP Dependency Check
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: 'security-alert-prioritization'
          path: '.'
          format: 'JSON'
          out: './reports'

      - name: Upload OWASP results
        uses: actions/upload-artifact@v3
        with:
          name: owasp-results
          path: './reports'
          retention-days: 30

  # CodeQL Security Analysis
  codeql-analysis:
    name: CodeQL Security Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    strategy:
      fail-fast: false
      matrix:
        language: ['javascript']
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: ${{ matrix.language }}

      - name: Autobuild
        uses: github/codeql-action/autobuild@v2

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v2

  # Security Report Generation
  security-report:
    name: Generate Security Report
    runs-on: ubuntu-latest
    needs: [snyk-scan, owasp-scan, codeql-analysis]
    if: always()
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Snyk results
        uses: actions/download-artifact@v3
        with:
          name: snyk-results
          path: ./snyk-results

      - name: Download OWASP results
        uses: actions/download-artifact@v3
        with:
          name: owasp-results
          path: ./owasp-results

      - name: Generate Security Report
        run: |
          echo "# 🔒 Security Scan Report" > security-report.md
          echo "" >> security-report.md
          echo "## 📊 Scan Summary" >> security-report.md
          echo "- **Date**: $(date)" >> security-report.md
          echo "- **Repository**: ${{ github.repository }}" >> security-report.md
          echo "- **Branch**: ${{ github.ref_name }}" >> security-report.md
          echo "- **Commit**: ${{ github.sha }}" >> security-report.md
          echo "" >> security-report.md
          echo "## 🔍 Scan Results" >> security-report.md
          echo "" >> security-report.md
          echo "### Snyk Scan" >> security-report.md
          if [ -f "./snyk-results/snyk-backend.json" ]; then
            echo "✅ Backend scan completed" >> security-report.md
          else
            echo "❌ Backend scan failed" >> security-report.md
          fi
          if [ -f "./snyk-results/snyk-frontend.json" ]; then
            echo "✅ Frontend scan completed" >> security-report.md
          else
            echo "❌ Frontend scan failed" >> security-report.md
          fi
          echo "" >> security-report.md
          echo "### OWASP Dependency Check" >> security-report.md
          if [ -d "./owasp-results" ]; then
            echo "✅ OWASP scan completed" >> security-report.md
          else
            echo "❌ OWASP scan failed" >> security-report.md
          fi
          echo "" >> security-report.md
          echo "### CodeQL Analysis" >> security-report.md
          echo "✅ CodeQL analysis completed" >> security-report.md
          echo "" >> security-report.md
          echo "## 🛡️ Security Recommendations" >> security-report.md
          echo "1. Review and address any high-severity vulnerabilities" >> security-report.md
          echo "2. Update dependencies regularly" >> security-report.md
          echo "3. Implement security headers" >> security-report.md
          echo "4. Enable automated security scanning" >> security-report.md

      - name: Upload Security Report
        uses: actions/upload-artifact@v3
        with:
          name: security-report
          path: security-report.md
          retention-days: 30

      - name: Comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v8
        with:
          script: |
            const fs = require('fs');
            const report = fs.readFileSync('security-report.md', 'utf8');
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: report
            });
